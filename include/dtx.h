#ifndef DTX_H
#define DTX_H

#ifdef __cplusplus
extern "C" {
#endif

#include "common.h"
#include "arch.h"
#include "log_layer.h"

typedef enum {
	DTX_RUNNING = 1,
	DTX_COMMIT,
	DTX_ABORT,
} dtx_status;

/*
 * Header
 */
struct dtx_struct {
	__le32	t_status; /* transaction status */
	__le32	t_num; /* how many logs */
	__le32	t_checksum; /* transaction checksum */
	__le32	t_id; /* transaction id */
	__le32	t_size; /* how many bytes in this transaction, excluding the header */
	__le64	t_start; /* first log address */
	__le32	t_next; /* next transaction address offset */
	__le64	t_version; /* version number generated by the stm */
	char	padding[16];
	logid_t	t_logid[]; /* a sequence of log id */
} __packed;

extern struct dtx_struct* dtx_begin(uint64_t timestamp);
extern void dtx_commit(struct dtx_struct* dtx);
extern void dtx_abort();

#ifdef __cplusplus
}
#endif

#endif
